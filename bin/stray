#!/bin/bash
set -e

if [ "$1" = "label" ]
then
    if [ $# -lt 2 ]
        then
            echo "Not enough arguments supplied"
            exit 1
    fi

    if [ "$2" = "generate" ]
    then
        stray-label-generate "${@:3}"
    elif [ "$2" = "show" ]
    then
        stray-label-show "${@:3}"
    else
        echo "Incorrect verb"
    fi
elif [ "$1" = "model" ]
then
    if [ $# -lt 2 ]
        then
            echo "Not enough arguments supplied"
            exit 1
    fi
    if [ "$2" = "generate" ]
    then
        stray-model-generate "${@:3}"
    elif [ "$2" = "bake" ]
    then
        i=0
        args=("$@")
        for arg in "$@"
        do  
            if [ "${args[i]}" = "--model" ]
            then
                model=${args[i+1]}
            elif [ "${args[i]}" = "--dataset" ]
            then
                dataset=${args[i+1]}
            elif [ "${args[i]}" = "--num-gpus" ]
            then
                gpus=${args[i+1]}
            elif [ "${args[i]}" = "--resume" ]
            then
                resume=true
            fi
            i=$((i + 1))
        done
        
        if [ $resume ]
        then
            docker run -v $dataset:/root/workspace/data -v $model:/root/workspace/detectron2-model --gpus all -it  strayrobots/detectron2:latest \
            --dataset /root/workspace/data \
            --model /root/workspace/detectron2-model \
            --num-gpus $gpus
            --resume
        else
            docker run -v $dataset:/root/workspace/data -v $model:/root/workspace/detectron2-model --gpus all -it  strayrobots/detectron2:latest \
            --dataset /root/workspace/data \
            --model /root/workspace/detectron2-model \
            --num-gpus $gpus 
        fi
    elif [ "$2" = "evaluate" ]
    then
        stray-model-evaluate "${@:3}"
    else
        echo "Incorrect verb"
    fi

elif [ "$1" = "studio" ]
then
    if [ $# != 3 ]
    then
        echo "Usage: stray studio open/integrate <path-to-scene>"
        exit 1
    fi

    scene_dir=$3
    if [ ! -d "$scene_dir" ]; then
        echo "data directory does not exist: $scene_dir"
        exit 1
    fi

    if [ "$2" = "integrate" ]
    then
        docker run -it -v $scene_dir:/root/data orbslam
    elif [ "$2" = "open" ]
    then
        studio $scene_dir
    else
        echo "verb $2 not supported by studio subcommand."
    fi

else
    echo "No command supplied"
fi

